buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        //classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
    }
}

group = "com.gralll"
version = "0.0.1"

allprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    jar {
        archiveName = project.name + ".jar"
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR6'
        }

        /* dependencies {
             dependency "org.projectlombok:lombok:1.16.8"
         }*/
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        compile ("org.springframework.cloud:spring-cloud-starter-eureka")
        compile ("org.springframework.cloud:spring-cloud-starter-config")
        compile ("org.springframework.cloud:spring-cloud-starter")

        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'

        testCompile 'org.springframework.boot:spring-boot-starter-test'
    }

    springBoot {
        executable = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}